[{"G:\\Projects\\U\\predictor-app\\src\\index.js":"1","G:\\Projects\\U\\predictor-app\\src\\reportWebVitals.js":"2","G:\\Projects\\U\\predictor-app\\src\\App.js":"3"},{"size":666,"mtime":1612236916554,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":2188,"mtime":1612245563157,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1uitye0",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"G:\\Projects\\U\\predictor-app\\src\\index.js",[],["17","18"],"G:\\Projects\\U\\predictor-app\\src\\reportWebVitals.js",[],["19","20"],"G:\\Projects\\U\\predictor-app\\src\\App.js",["21"],"import './App.css';\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport {useSpring, animated } from 'react-spring'\nimport { useResizeDetector } from 'react-resize-detector';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nfunction App() {\n  const { width, ref } = useResizeDetector();\n  const [enteredText, setEnteredText] = useState(\"\");\n  const [predictedText, setPredictedText] = useState(\"\");\n  const [extended, toggle] = useState(false);\n\n  const data = useSpring({\n    width: extended ? `${width}px` : '0px'\n  });\n\n  const handleOnChange = (e) => {\n    setEnteredText(e.target.value);\n    callModelWrapper(e.target.value);\n  };\n\n  const callModel = (e) => {\n    if (e) {\n      axios({\n        method: 'POST',\n        url: 'http://127.0.0.1:5000/predict',\n        data: {\n          string: e\n        }\n      })\n        .then(res => {\n          console.log(res);\n          setPredictedText(res.data.word);\n        })\n        .catch(error => {\n          console.log(\"oops lmao\");\n        })\n    } else {\n      return \"\";\n    }\n  }\n\n  const callModelWrapper = useCallback(\n    _.debounce((e) => {\n      callModel(e);\n    },\n  1000), []);\n\n  return (\n    <div className=\"App\">\n      <Main>\n        <InputWrapper>\n          <InputText\n          style={{ width: '720px' }}\n          type=\"text\"\n          placeholder=\"Type here...\"\n          value={ enteredText }\n          onFocus={ e => toggle(true) }\n          onBlur={ e => toggle(false) }\n          onChange={ e => handleOnChange(e) }\n          ref={ ref }\n          />\n          <AnimatedBox className=\"script-box\" style={data} />\n        </InputWrapper>\n        <P>\n          { predictedText }\n        </P>\n      </Main>\n    </div>\n  );\n}\n\nconst Main = styled.div`\n  display: block;\n`;\n\nconst InputWrapper = styled.div`\n  display: block;\n`;\n\nconst InputText = styled.textarea`\n  background: #f5fdff;\n  font-family: 'Noto Serif', serif;\n  font-size: 48px;\n  border: none;\n  outline: none;\n\n  &::placeholder {\n    color: #888\n  }\n`;\n\nconst AnimatedBox = styled(animated.div)`\n  background: #ff6600;\n  height: 4px;\n`;\n\nconst P = styled.p`\n  font-size: 30px;\n`;\n\nexport default App;\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"22","replacedBy":"26"},{"ruleId":"24","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":45,"column":28,"nodeType":"30","endLine":45,"endColumn":39},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],["31"],["32"],"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","no-global-assign","no-unsafe-negation"]